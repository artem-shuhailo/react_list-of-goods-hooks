{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortField","reverse","setSortReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAiCC,mBAASH,EAASI,MAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EA/BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,QAENI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAOlB,EAASI,SAKpBG,GACFI,EAAcJ,UAGTI,EAMcQ,CACnBlB,EAAiB,CAAEI,WAAUE,YAQ/B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAaL,EAASe,UAAY,YAC/DO,QAAS,WACPhB,EAAaN,EAASe,WAJ1B,iCAUA,wBACEM,KAAK,SACLD,UAAS,4BAAuBf,IAAaL,EAASiB,QAAU,YAChEK,QAAS,WACPhB,EAAaN,EAASiB,SAJ1B,4BAUA,wBACEI,KAAK,SACLD,UAAS,6BAAwBb,GAAW,YAC5Ce,QAAS,WACPd,GAAgBD,IAJpB,sBAUEF,GAAYE,IACZ,wBACEc,KAAK,SACLD,UAAU,4BACVE,QA1CI,WACZhB,EAAaN,EAASI,MACtBI,GAAe,IAqCT,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8f67028.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype SortOptions = {\n  sortType: SortType,\n  reverse: boolean,\n};\n\nexport function getPreparedGoods(\n  goods: string[],\n  { sortType, reverse }: SortOptions,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return SortType.NONE;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortField] = useState(SortType.NONE);\n  const [reverse, setSortReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortType, reverse },\n  );\n\n  const reset = () => {\n    setSortField(SortType.NONE);\n    setSortReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={() => {\n            setSortField(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={() => {\n            setSortField(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n          onClick={() => {\n            setSortReverse(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}